import os
import re
import subprocess

from setuptools import setup

VERSION = '''# This file is automatically generated or overwritten by running setup.py.
# Distributed tarballs contain a pre-generated copy of this file.

__version__ = '%s'
'''

def update_version():
    """
        Updates the Python version based on the Git tags, number of commits and
        current application version - useful for non-release versions.

        Inspired by similar code in 'python-ecdsa'
        <https://github.com/warner/python-ecdsa> by Brian Warner.

    """
    if not os.path.isdir('.git'):
        print 'Not a git repository; not updating _version.py'
        return

    try:
        p = subprocess.Popen(['git', 'describe', '--tags', '--dirty', '--always'],
            stdout=subprocess.PIPE, universal_newlines=True)
    except EnvironmentError:
        print 'Unable to run git; not updating _version.py'
        return

    version = p.communicate()[0].rstrip()

    if p.returncode != 0:
        print 'Unable to run git; not updating _version.py'
        return

    with open('_version.py', 'w') as f:
        f.write(VERSION % version)

    return version

def get_version():
    version = update_version()

    if not version:
        with open('_version.py', 'r') as f:
            for line in f.readlines():
                mo = re.match("__version__ = '([^']+)'", line)
                if mo:
                    version = mo.group(1)
            return version

    return version

def get_description():
    description = open('README.rst').read()
    try:
        description += '\n\n' + open('docs/changelog.rst').read()
    except IOError:
        pass
    return description

def get_requirements():
    with open('requirements.txt', 'r') as f:
        return f.readlines()

setup(
    name='Proxy-Negotiate',
    version=get_version(),
    url='https://github.com/cour4g3/proxy-negotiate',
    license='MIT',
    author='Michael de Villiers',
    author_email='michael@cour4g3.me',
    description='HTTP Negotiate (SPNEGO) proxy authentication support for applications.',
    long_description=get_description(),
    py_modules=['proxy_negotiate'],
    platforms='any',
    install_requires=[
        'gssapi',
    ],
    scripts=[
        'bin/nc-negotiate',
        'bin/proxy-negotiate',
    ],
    classifiers=[
        'Environment :: Console',
        'Intended Audience :: System Administrators',
        'License :: OSI Approved :: MIT License',
        'Operating System :: OS Independent',
        'Programming Language :: Python :: 2.6',
        'Programming Language :: Python :: 2.7',
        'Programming Language :: Python :: 3.3',
        'Programming Language :: Python :: 3.4',
        'Programming Language :: Python :: 3.5',
        'Topic :: Internet :: Proxy Servers',
        'Topic :: Security',
        'Topic :: System :: Systems Administration :: Authentication/Directory',
        'Topic :: Utilities',
    ]
)
